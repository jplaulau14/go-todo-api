services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: go-todo-api-dev:local
    container_name: go-todo-api-dev
    command: ["/go/bin/air", "-c", ".air.toml"]
    environment:
      - PORT=8080
      - DB_DSN=host=db port=5432 user=${POSTGRES_USER:-todo} password=${POSTGRES_PASSWORD:-todo} dbname=${POSTGRES_DB:-todo} sslmode=disable
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
      - air-cache:/app/.air
    working_dir: /app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
  swagger:
    image: swaggerapi/swagger-ui
    container_name: go-todo-api-swagger
    environment:
      - SWAGGER_JSON=/openapi.yaml
    ports:
      - "8081:8080"
    volumes:
      - ./openapi.yaml:/openapi.yaml:ro
    depends_on:
      - api
    restart: unless-stopped
  db:
    image: postgres:16-alpine
    container_name: go-todo-api-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-todo}
      - POSTGRES_USER=${POSTGRES_USER:-todo}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-todo}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-todo} -d ${POSTGRES_DB:-todo}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  air-cache: {}
  pgdata: {}


